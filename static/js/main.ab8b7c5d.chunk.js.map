{"version":3,"sources":["assets/fire.jpg","assets/water.jpg","assets/earth.png","music.js","game.js","assets/music/sway.js","assets/sounds/menuPlunk.js","assets/sounds/menuGo.js","GenericKeyHandlerInput.js","assets/players/playerFire.js","assets/players/playerWater.js","assets/players/playerEarth.js","assets/sounds/shortSwoosh.js","scenes/mapPlay.js","scenes/characterSelect.js","index.js"],"names":["module","exports","__webpack_require__","p","CPlayer","mSong","mLastRow","mCurrentCol","mNumWords","mMixBuf","osc_sin","value","Math","sin","getnotefreq","n","pow","createNote","instr","rowLen","j","j2","e","t","rsample","o1t","o2t","osc1","mOscillators","i","o1vol","o1xenv","osc2","o2vol","o2xenv","noiseVol","attack","sustain","release","releaseInv","arp","arpInterval","noteBuf","Int32Array","c1","c2","random","v2","this","init","song","endPattern","patternLen","generate","row","col","cp","k","rowStartSample","f","high","lsample","chnBuf","songData","low","band","filterActive","noteCache","cmdNo","c","oscLFO","lfoAmt","lfoFreq","fxLFO","fxFilter","fxFreq","q","dist","drive","panAmt","panFreq","dlyAmt","dly","length","numChannels","createWave","l1","l2","wave","Uint8Array","set","idx","y","getData","floor","d","Array","MusicPlayer","autoplay","loop","Object","classCallCheck","player","audio","document","createElement","load","createClass","key","stop","src","URL","createObjectURL","Blob","type","play","pause","currentTime","src_music","game","GameManager","_this","canvas","engine","Engine","getElementById","appendChild","runRenderLoop","scenes","forEach","scene","render","window","addEventListener","resize","level","extra","arguments","undefined","music","sway","menuPlunk","menuGo","GenericKeyHandlerInput","onUpdate","_keys","Set","noPreventDefault","preventDefault","delete","_this2","add","element","_onKeyDown","onKeyDown","_onKeyUp","onKeyUp","removeEventListener","CreateSphere","MeshBuilder","players_playerFire","_ref","_ref$x","x","_ref$y","_ref$z","z","_ref$diameter","diameter","options","objectWithoutProperties","playerFire","objectSpread","position","Vector3","material","StandardMaterial","ambientTexture","Texture","require","playerWater","playerEarth","shortSwoosh","players","SphereImpostor","PhysicsImpostor","BoxImpostor","CreateGround","mapPlay","Scene","clearColor","Color3","Black","shortSwooshSound","camera","FollowCamera","Zero","checkCollisions","applyGravity","radius","attachControl","light","DirectionalLight","intensity","shadowGenerator","ShadowGenerator","useExponentialShadowMap","concat","getShadowMap","renderList","push","lockedTarget","addShadowCaster","ground","width","height","depth","subdivs","receiveShadows","enablePhysics","physicsImpostor","mass","restitution","registerOnPhysicsCollide","main","collided","handleKeys","keys","v","has","setLinearVelocity","AdvancedDynamicTexture","GUI","Control","VERTICAL_ALIGNMENT_BOTTOM","VERTICAL_ALIGNMENT_TOP","TextBlock","menuPlunkSound","menuGoSound","gui","CreateFullscreenUI","text1","text","color","fontSize","textVerticalAlignment","addControl","text2","stuff","light1","HemisphericLight","light2","PointLight","FreeCamera","inputs","clear","currentPlayer","getMeshByName"],"mappings":"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AArC,+BAAyE,KAC5E4C,EAAG,MAGT,CACE9B,EAAG,CACD,EACA,IACA,IACA,EACA,EACA,IACA,IACA,EACA,EACA,EACA,EACA,EACA,IACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IACA,EACA,EACA,GACA,GACA,EACA,GACA,GAGF1B,EAAG,QAAS,EAAT,SAAqB,EAArB,OAA+B,GAElCkE,EAAG,CACD,CAAEtD,EAAG,CAAC,KACJ4C,EAAG,OAIXxC,OAAQ,KACRiC,WAAY,GACZD,WAAY,GACZiC,YAAa,GCtXAyD,EAAA,CACb9E,SAAU,CACR,CACElC,EAAG,CACD,EACA,IACA,IACA,EACA,EACA,IACA,IACA,GACA,EACA,EACA,EACA,EACA,GACA,IACA,EACA,EACA,EACA,EACA,EACA,EACA,IACA,EACA,EACA,GACA,GACA,EACA,EACA,GAGF1B,EAAG,CAAC,GAEJkE,EAAG,CACD,CAAEtD,EAAG,CAAC,KACJ4C,EAAG,OAIXxC,OAAQ,KACRiC,WAAY,EACZD,WAAY,EACZiC,YAAa,GC7CA0D,EAAA,CACb/E,SAAU,CACR,CACElC,EAAG,CACD,EACA,IACA,IACA,EACA,EACA,IACA,IACA,GACA,EACA,EACA,EACA,EACA,GACA,IACA,EACA,EACA,EACA,EACA,EACA,EACA,IACA,EACA,EACA,GACA,GACA,EACA,IACA,GAGF1B,EAAG,CAAC,GAEJkE,EAAG,CACD,CAAEtD,EAAG,CAAC,KACJ4C,EAAG,OAIXxC,OAAQ,KACRiC,WAAY,EACZD,WAAY,EACZiC,YAAa,GCpDM2D,aACnB,SAAAA,EAAaC,GAAW5C,OAAAC,EAAA,EAAAD,CAAApD,KAAA+F,GACtB/F,KAAKiG,MAAQ,IAAIC,IACjBlG,KAAKgG,SAAWA,GAAa,iEAGtBG,GAAkB,IAAA1B,EAAAzE,KACzB,OAAO,SAAA1B,GACA6H,GACH7H,EAAE8H,iBAEJ3B,EAAKwB,MAAMI,OAAO/H,EAAEsF,wCAIbuC,GAAkB,IAAAG,EAAAtG,KAC3B,OAAO,SAAA1B,GACA6H,GACH7H,EAAE8H,iBAEJE,EAAKL,MAA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","file":"static/js/main.ab8b7c5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fire.8dc70676.jpg\";","module.exports = __webpack_public_path__ + \"static/media/water.5ce497de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earth.197ad41f.png\";","/* eslint-disable */\n\n/* -*- mode: javascript; tab-width: 4; indent-tabs-mode: nil; -*-\n*\n* Copyright (c) 2011-2013 Marcus Geelnard\n*\n* This software is provided 'as-is', without any express or implied\n* warranty. In no event will the authors be held liable for any damages\n* arising from the use of this software.\n*\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n*\n* 1. The origin of this software must not be misrepresented; you must not\n*    claim that you wrote the original software. If you use this software\n*    in a product, an acknowledgment in the product documentation would be\n*    appreciated but is not required.\n*\n* 2. Altered source versions must be plainly marked as such, and must not be\n*    misrepresented as being the original software.\n*\n* 3. This notice may not be removed or altered from any source\n*    distribution.\n*\n*/\n\n\"use strict\";\n\nvar CPlayer = function() {\n\n    //--------------------------------------------------------------------------\n    // Private methods\n    //--------------------------------------------------------------------------\n\n    // Oscillators\n    var osc_sin = function (value) {\n        return Math.sin(value * 6.283184);\n    };\n\n    var osc_saw = function (value) {\n        return 2 * (value % 1) - 1;\n    };\n\n    var osc_square = function (value) {\n        return (value % 1) < 0.5 ? 1 : -1;\n    };\n\n    var osc_tri = function (value) {\n        var v2 = (value % 1) * 4;\n        if(v2 < 2) return v2 - 1;\n        return 3 - v2;\n    };\n\n    var getnotefreq = function (n) {\n        // 174.61.. / 44100 = 0.003959503758 (F3)\n        return 0.003959503758 * Math.pow(2, (n - 128) / 12);\n    };\n\n    var createNote = function (instr, n, rowLen) {\n        var osc1 = mOscillators[instr.i[0]],\n            o1vol = instr.i[1],\n            o1xenv = instr.i[3],\n            osc2 = mOscillators[instr.i[4]],\n            o2vol = instr.i[5],\n            o2xenv = instr.i[8],\n            noiseVol = instr.i[9],\n            attack = instr.i[10] * instr.i[10] * 4,\n            sustain = instr.i[11] * instr.i[11] * 4,\n            release = instr.i[12] * instr.i[12] * 4,\n            releaseInv = 1 / release,\n            arp = instr.i[13],\n            arpInterval = rowLen * Math.pow(2, 2 - instr.i[14]);\n\n        var noteBuf = new Int32Array(attack + sustain + release);\n\n        // Re-trig oscillators\n        var c1 = 0, c2 = 0;\n\n        // Local variables.\n        var j, j2, e, t, rsample, o1t, o2t;\n\n        // Generate one note (attack + sustain + release)\n        for (j = 0, j2 = 0; j < attack + sustain + release; j++, j2++) {\n            if (j2 >= 0) {\n                // Switch arpeggio note.\n                arp = (arp >> 8) | ((arp & 255) << 4);\n                j2 -= arpInterval;\n\n                // Calculate note frequencies for the oscillators\n                o1t = getnotefreq(n + (arp & 15) + instr.i[2] - 128);\n                o2t = getnotefreq(n + (arp & 15) + instr.i[6] - 128) * (1 + 0.0008 * instr.i[7]);\n            }\n\n            // Envelope\n            e = 1;\n            if (j < attack) {\n                e = j / attack;\n            } else if (j >= attack + sustain) {\n                e -= (j - attack - sustain) * releaseInv;\n            }\n\n            // Oscillator 1\n            t = o1t;\n            if (o1xenv) {\n                t *= e * e;\n            }\n            c1 += t;\n            rsample = osc1(c1) * o1vol;\n\n            // Oscillator 2\n            t = o2t;\n            if (o2xenv) {\n                t *= e * e;\n            }\n            c2 += t;\n            rsample += osc2(c2) * o2vol;\n\n            // Noise oscillator\n            if (noiseVol) {\n                rsample += (2 * Math.random() - 1) * noiseVol;\n            }\n\n            // Add to (mono) channel buffer\n            noteBuf[j] = (80 * rsample * e) | 0;\n        }\n\n        return noteBuf;\n    };\n\n\n    //--------------------------------------------------------------------------\n    // Private members\n    //--------------------------------------------------------------------------\n\n    // Array of oscillator functions\n    var mOscillators = [\n        osc_sin,\n        osc_square,\n        osc_saw,\n        osc_tri\n    ];\n\n    // Private variables set up by init()\n    var mSong, mLastRow, mCurrentCol, mNumWords, mMixBuf;\n\n\n    //--------------------------------------------------------------------------\n    // Initialization\n    //--------------------------------------------------------------------------\n\n    this.init = function (song) {\n        // Define the song\n        mSong = song;\n\n        // Init iteration state variables\n        mLastRow = song.endPattern;\n        mCurrentCol = 0;\n\n        // Prepare song info\n        mNumWords =  song.rowLen * song.patternLen * (mLastRow + 1) * 2;\n\n        // Create work buffer (initially cleared)\n        mMixBuf = new Int32Array(mNumWords);\n    };\n\n\n    //--------------------------------------------------------------------------\n    // Public methods\n    //--------------------------------------------------------------------------\n\n    // Generate audio data for a single track\n    this.generate = function () {\n        // Local variables\n        var i, j, b, p, row, col, n, cp,\n            k, t, lfor, e, x, rsample, rowStartSample, f, da;\n\n        // Put performance critical items in local variables\n        var chnBuf = new Int32Array(mNumWords),\n            instr = mSong.songData[mCurrentCol],\n            rowLen = mSong.rowLen,\n            patternLen = mSong.patternLen;\n\n        // Clear effect state\n        var low = 0, band = 0, high;\n        var lsample, filterActive = false;\n\n        // Clear note cache.\n        var noteCache = [];\n\n         // Patterns\n         for (p = 0; p <= mLastRow; ++p) {\n            cp = instr.p[p];\n\n            // Pattern rows\n            for (row = 0; row < patternLen; ++row) {\n                // Execute effect command.\n                var cmdNo = cp ? instr.c[cp - 1].f[row] : 0;\n                if (cmdNo) {\n                    instr.i[cmdNo - 1] = instr.c[cp - 1].f[row + patternLen] || 0;\n\n                    // Clear the note cache since the instrument has changed.\n                    if (cmdNo < 16) {\n                        noteCache = [];\n                    }\n                }\n\n                // Put performance critical instrument properties in local variables\n                var oscLFO = mOscillators[instr.i[15]],\n                    lfoAmt = instr.i[16] / 512,\n                    lfoFreq = Math.pow(2, instr.i[17] - 9) / rowLen,\n                    fxLFO = instr.i[18],\n                    fxFilter = instr.i[19],\n                    fxFreq = instr.i[20] * 43.23529 * 3.141592 / 44100,\n                    q = 1 - instr.i[21] / 255,\n                    dist = instr.i[22] * 1e-5,\n                    drive = instr.i[23] / 32,\n                    panAmt = instr.i[24] / 512,\n                    panFreq = 6.283184 * Math.pow(2, instr.i[25] - 9) / rowLen,\n                    dlyAmt = instr.i[26] / 255,\n                    dly = instr.i[27] * rowLen & ~1;  // Must be an even number\n\n                // Calculate start sample number for this row in the pattern\n                rowStartSample = (p * patternLen + row) * rowLen;\n\n                // Generate notes for this pattern row\n                for (col = 0; col < 4; ++col) {\n                    n = cp ? instr.c[cp - 1].n[row + col * patternLen] : 0;\n                    if (n) {\n                        if (!noteCache[n]) {\n                            noteCache[n] = createNote(instr, n, rowLen);\n                        }\n\n                        // Copy note from the note cache\n                        var noteBuf = noteCache[n];\n                        for (j = 0, i = rowStartSample * 2; j < noteBuf.length; j++, i += 2) {\n                          chnBuf[i] += noteBuf[j];\n                        }\n                    }\n                }\n\n                // Perform effects for this pattern row\n                for (j = 0; j < rowLen; j++) {\n                    // Dry mono-sample\n                    k = (rowStartSample + j) * 2;\n                    rsample = chnBuf[k];\n\n                    // We only do effects if we have some sound input\n                    if (rsample || filterActive) {\n                        // State variable filter\n                        f = fxFreq;\n                        if (fxLFO) {\n                            f *= oscLFO(lfoFreq * k) * lfoAmt + 0.5;\n                        }\n                        f = 1.5 * Math.sin(f);\n                        low += f * band;\n                        high = q * (rsample - band) - low;\n                        band += f * high;\n                        rsample = fxFilter == 3 ? band : fxFilter == 1 ? high : low;\n\n                        // Distortion\n                        if (dist) {\n                            rsample *= dist;\n                            rsample = rsample < 1 ? rsample > -1 ? osc_sin(rsample*.25) : -1 : 1;\n                            rsample /= dist;\n                        }\n\n                        // Drive\n                        rsample *= drive;\n\n                        // Is the filter active (i.e. still audiable)?\n                        filterActive = rsample * rsample > 1e-5;\n\n                        // Panning\n                        t = Math.sin(panFreq * k) * panAmt + 0.5;\n                        lsample = rsample * (1 - t);\n                        rsample *= t;\n                    } else {\n                        lsample = 0;\n                    }\n\n                    // Delay is always done, since it does not need sound input\n                    if (k >= dly) {\n                        // Left channel = left + right[-p] * t\n                        lsample += chnBuf[k-dly+1] * dlyAmt;\n\n                        // Right channel = right + left[-p] * t\n                        rsample += chnBuf[k-dly] * dlyAmt;\n                    }\n\n                    // Store in stereo channel buffer (needed for the delay effect)\n                    chnBuf[k] = lsample | 0;\n                    chnBuf[k+1] = rsample | 0;\n\n                    // ...and add to stereo mix buffer\n                    mMixBuf[k] += lsample | 0;\n                    mMixBuf[k+1] += rsample | 0;\n                }\n            }\n        }\n\n        // Next iteration. Return progress (1.0 == done!).\n        mCurrentCol++;\n        return mCurrentCol / mSong.numChannels;\n    };\n\n    // Create a WAVE formatted Uint8Array from the generated audio data\n    this.createWave = function() {\n        // Create WAVE header\n        var headerLen = 44;\n        var l1 = headerLen + mNumWords * 2 - 8;\n        var l2 = l1 - 36;\n        var wave = new Uint8Array(headerLen + mNumWords * 2);\n        wave.set(\n            [82,73,70,70,\n             l1 & 255,(l1 >> 8) & 255,(l1 >> 16) & 255,(l1 >> 24) & 255,\n             87,65,86,69,102,109,116,32,16,0,0,0,1,0,2,0,\n             68,172,0,0,16,177,2,0,4,0,16,0,100,97,116,97,\n             l2 & 255,(l2 >> 8) & 255,(l2 >> 16) & 255,(l2 >> 24) & 255]\n        );\n\n        // Append actual wave data\n        for (var i = 0, idx = headerLen; i < mNumWords; ++i) {\n            // Note: We clamp here\n            var y = mMixBuf[i];\n            y = y < -32767 ? -32767 : (y > 32767 ? 32767 : y);\n            wave[idx++] = y & 255;\n            wave[idx++] = (y >> 8) & 255;\n        }\n\n        // Return the WAVE formatted typed array\n        return wave;\n    };\n\n    // Get n samples of wave data at time t [s]. Wave data in range [-2,2].\n    this.getData = function(t, n) {\n        var i = 2 * Math.floor(t * 44100);\n        var d = new Array(n);\n        for (var j = 0; j < 2*n; j += 1) {\n            var k = i + j;\n            d[j] = t > 0 && k < mMixBuf.length ? mMixBuf[k] / 32768 : 0;\n        }\n        return d;\n    };\n};\n\nexport class MusicPlayer {\n  constructor(song, autoplay, loop){\n    this.player = new CPlayer()\n    this.audio = document.createElement('audio')\n    if (song){\n      this.load(song, autoplay, loop)\n    }\n  }\n  \n  load(song, autoplay, loop){\n    this.stop()\n    this.player.init(song)\n    this.player.generate()\n    const wave = this.player.createWave()\n    this.audio.src = URL.createObjectURL(new Blob([wave], {type: \"audio/wav\"}))\n    if (autoplay){\n      this.play()\n    }\n    this.audio.loop = loop ? 'loop' : false\n  }\n  \n  play(){\n    this.audio.play()\n  }\n  \n  pause(){\n    this.audio.pause()\n  }\n\n  stop(){\n    this.pause()\n    this.audio.currentTime = 0\n  }\n}\n\nexport default new MusicPlayer()\n","import { Engine } from 'babylonjs'\nimport music from './music'\n\nclass GameManager {\n  constructor () {\n    this.canvas = document.createElement('canvas')\n    this.engine = new Engine(this.canvas, true, {}, true)\n    document.getElementById('root').appendChild(this.canvas)\n    this.engine.runRenderLoop(() => {\n      this.engine.scenes.forEach(scene => scene.render())\n    })\n    window.addEventListener('resize', () => this.engine.resize())\n    this.engine.resize()\n  }\n\n  load (level, extra = {}) {\n    music.stop()\n    delete this.engine.scenes\n    this.engine.scenes = []\n    level(this.engine, this.canvas, music, extra)\n  }\n}\n\nexport default new GameManager()\n","// SWAY by m @ Bits'n'Bites, from the 4k demo: http://pouet.net/prod.php?which=59203\n\n/* eslint-disable */\n\n// This music has been exported by SoundBox. You can use it with\n// http://sb.bitsnbites.eu/player-small.js in your own product.\n\n// See http://sb.bitsnbites.eu/demo.html for an example of how to\n// use it in a demo.\n\n// Song data\nexport default {\n  songData: [\n    { // Instrument 0\n      i: [\n        2, // OSC1_WAVEFORM\n        100, // OSC1_VOL\n        128, // OSC1_SEMI\n        0, // OSC1_XENV\n        3, // OSC2_WAVEFORM\n        201, // OSC2_VOL\n        128, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        0, // OSC2_XENV\n        0, // NOISE_VOL\n        0, // ENV_ATTACK\n        6, // ENV_SUSTAIN\n        29, // ENV_RELEASE\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        194, // LFO_AMT\n        4, // LFO_FREQ\n        1, // LFO_FX_FREQ\n        3, // FX_FILTER\n        25, // FX_FREQ\n        191, // FX_RESONANCE\n        115, // FX_DIST\n        244, // FX_DRIVE\n        147, // FX_PAN_AMT\n        6, // FX_PAN_FREQ\n        84, // FX_DELAY_AMT\n        6 // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [5, 1, 2, 1, 1, 1, 1, 3, 4, 1, 2, 1, 2, 1, 2,,, 7, 8, 7, 8, 7, 8, 7, 8, 6, 9],\n      // Columns\n      c: [\n        { n: [123, 123, 135, 128, 123, 123, 135, 130, 126, 125, 126, 128, 123, 123, 135, 128, 123, 123, 135, 130, 126, 125, 126, 128, 123, 123, 135, 128, 123, 123, 135, 130],\n          f: [21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 48] },\n        { n: [123, 123, 135, 128, 123, 123, 135, 130, 126, 125, 126, 128, 123, 123, 135, 128, 123, 123, 135, 130, 126, 125, 126, 128, 123,, 99,,,, 99,,,,,,,,,,,,,,,,,,,,,,,,,, 111],\n          f: [,,,,,,,,,,,,,,,,,,,,,,,,,,, 11, 13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 31] },\n        { n: [111,,,,,,,, 123,,,,,,,, 111,,,,,,,, 123],\n          f: [] },\n        { n: [114,,,,,,,, 126,,,,,,,, 114,,,,,,,, 114, 126, 111, 123, 114, 126, 118, 130],\n          f: [13,,,,,,,,,,,,,,,,,,,,,,,, 13,, 13,, 13,, 13, 11, 29,,,,,,,,,,,,,,,,,,,,,,,, 32,, 41,, 29,, 25, 15] },\n        { n: [123, 123, 135, 128, 123, 123, 135, 130, 126, 125, 126, 128, 123, 123, 135, 128, 123, 123, 135, 130, 126, 125, 126, 128, 123,, 99,,,, 99,,,,,,,,,,,,,,,,,,,,,,,,,, 111],\n          f: [13, 11, 21, 17,,,,,,,,,,,,,,,,,,,,,,,,,,,, 17, 29,, 25, 113,,,,,,,,,,,,,,,,,,,,,,,,,,,, 194] },\n        { n: [111,,,,,,,, 123,,,,,,,, 111,,,,,,,, 99],\n          f: [] },\n        { n: [111, 123,, 123, 111,, 123, 111, 111, 123,, 123, 111,, 123, 111, 111, 123,, 123, 111,, 123, 111, 111, 123,, 123, 111,, 123, 111],\n          f: [] },\n        { n: [114, 126,, 126, 114,, 126, 114, 114, 126,, 126, 114,, 126, 114, 114, 126,, 126, 114,, 126, 114, 116, 128,, 128, 116,, 114, 121],\n          f: [] },\n        { n: [],\n          f: [] }\n      ]\n    },\n    { // Instrument 1\n      i: [\n        0, // OSC1_WAVEFORM\n        255, // OSC1_VOL\n        117, // OSC1_SEMI\n        1, // OSC1_XENV\n        0, // OSC2_WAVEFORM\n        255, // OSC2_VOL\n        110, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        1, // OSC2_XENV\n        0, // NOISE_VOL\n        4, // ENV_ATTACK\n        6, // ENV_SUSTAIN\n        35, // ENV_RELEASE\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        0, // LFO_AMT\n        0, // LFO_FREQ\n        0, // LFO_FX_FREQ\n        2, // FX_FILTER\n        14, // FX_FREQ\n        1, // FX_RESONANCE\n        1, // FX_DIST\n        39, // FX_DRIVE\n        76, // FX_PAN_AMT\n        5, // FX_PAN_FREQ\n        0, // FX_DELAY_AMT\n        0 // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [, 1, 1, 1, 1, 1, 1, 2,,,, 1, 1, 1, 1, 1, 1,,, 1, 1, 1, 1, 1, 1],\n      // Columns\n      c: [\n        { n: [147,,,,,, 147,,,, 147,,,,,, 147,,,,,, 147,,,, 147,,,, 147],\n          f: [] },\n        { n: [147],\n          f: [] }\n      ]\n    },\n    { // Instrument 2\n      i: [\n        0, // OSC1_WAVEFORM\n        0, // OSC1_VOL\n        140, // OSC1_SEMI\n        0, // OSC1_XENV\n        0, // OSC2_WAVEFORM\n        0, // OSC2_VOL\n        140, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        0, // OSC2_XENV\n        60, // NOISE_VOL\n        4, // ENV_ATTACK\n        10, // ENV_SUSTAIN\n        68, // ENV_RELEASE\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        187, // LFO_AMT\n        5, // LFO_FREQ\n        0, // LFO_FX_FREQ\n        1, // FX_FILTER\n        239, // FX_FREQ\n        135, // FX_RESONANCE\n        0, // FX_DIST\n        32, // FX_DRIVE\n        108, // FX_PAN_AMT\n        5, // FX_PAN_FREQ\n        16, // FX_DELAY_AMT\n        4 // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [, 1, 1, 2, 3, 2, 3, 4,,,, 2, 3, 2, 3, 2, 3,,, 5, 5, 5, 5, 5, 5, 4],\n      // Columns\n      c: [\n        { n: [,,,, 147,,,,,,,, 148,,,,,,,, 147,,,,,,,, 147],\n          f: [13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 35] },\n        { n: [,,,, 147,,, 147,,,,, 148,,,,,,,, 147,,, 147,,, 147,,,, 147],\n          f: [13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 35] },\n        { n: [,,,, 147,,, 147,,,,, 148,,,,,,,, 147,,, 147,,, 147,,, 147, 147, 147],\n          f: [13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 35] },\n        { n: [147],\n          f: [13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 68] },\n        { n: [147,,, 147,,, 147,, 147,,, 147,, 147,, 147, 147,,, 147,,, 147,, 147,,, 147,, 147,, 147],\n          f: [13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 35] }\n      ]\n    },\n    { // Instrument 3\n      i: [\n        2, // OSC1_WAVEFORM\n        192, // OSC1_VOL\n        128, // OSC1_SEMI\n        0, // OSC1_XENV\n        2, // OSC2_WAVEFORM\n        192, // OSC2_VOL\n        140, // OSC2_SEMI\n        18, // OSC2_DETUNE\n        0, // OSC2_XENV\n        0, // NOISE_VOL\n        107, // ENV_ATTACK\n        115, // ENV_SUSTAIN\n        138, // ENV_RELEASE\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        136, // LFO_AMT\n        5, // LFO_FREQ\n        1, // LFO_FX_FREQ\n        2, // FX_FILTER\n        8, // FX_FREQ\n        92, // FX_RESONANCE\n        21, // FX_DIST\n        56, // FX_DRIVE\n        148, // FX_PAN_AMT\n        5, // FX_PAN_FREQ\n        85, // FX_DELAY_AMT\n        8 // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [3, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2],\n      // Columns\n      c: [\n        { n: [111],\n          f: [] },\n        { n: [114],\n          f: [] },\n        { n: [111],\n          f: [24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 24, 5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 56] }\n      ]\n    },\n    { // Instrument 4\n      i: [\n        3, // OSC1_WAVEFORM\n        0, // OSC1_VOL\n        127, // OSC1_SEMI\n        0, // OSC1_XENV\n        3, // OSC2_WAVEFORM\n        68, // OSC2_VOL\n        127, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        1, // OSC2_XENV\n        218, // NOISE_VOL\n        4, // ENV_ATTACK\n        4, // ENV_SUSTAIN\n        40, // ENV_RELEASE\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        1, // LFO_WAVEFORM\n        55, // LFO_AMT\n        4, // LFO_FREQ\n        1, // LFO_FX_FREQ\n        2, // FX_FILTER\n        67, // FX_FREQ\n        115, // FX_RESONANCE\n        124, // FX_DIST\n        190, // FX_DRIVE\n        67, // FX_PAN_AMT\n        6, // FX_PAN_FREQ\n        39, // FX_DELAY_AMT\n        1 // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [,,, 1, 2, 1, 2, 3,,,, 1, 2, 1, 2, 1, 2,,, 1, 4, 1, 4, 1, 4, 3],\n      // Columns\n      c: [\n        { n: [,,,, 147,,,,,,,, 147,,,,,,,, 147,,,,,,,, 147],\n          f: [] },\n        { n: [,,,, 147,,,,,,,, 147,,,,,,,, 147,,,,,,,, 147,, 147, 147],\n          f: [] },\n        { n: [147],\n          f: [] },\n        { n: [,,,, 147,,,,,,,, 147,,,,,,,, 147,,,,,,,, 147,,, 147],\n          f: [] }\n      ]\n    },\n    { // Instrument 5\n      i: [\n        0, // OSC1_WAVEFORM\n        91, // OSC1_VOL\n        128, // OSC1_SEMI\n        0, // OSC1_XENV\n        0, // OSC2_WAVEFORM\n        95, // OSC2_VOL\n        128, // OSC2_SEMI\n        12, // OSC2_DETUNE\n        0, // OSC2_XENV\n        0, // NOISE_VOL\n        12, // ENV_ATTACK\n        0, // ENV_SUSTAIN\n        67, // ENV_RELEASE\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        0, // LFO_AMT\n        0, // LFO_FREQ\n        0, // LFO_FX_FREQ\n        2, // FX_FILTER\n        255, // FX_FREQ\n        15, // FX_RESONANCE\n        0, // FX_DIST\n        32, // FX_DRIVE\n        83, // FX_PAN_AMT\n        3, // FX_PAN_FREQ\n        134, // FX_DELAY_AMT\n        4 // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [,,, 1, 2, 3, 2, 1, 2,,, 1, 2, 3, 2, 1, 2,,,,, 4, 5, 4, 5],\n      // Columns\n      c: [\n        { n: [159,, 147,, 154,, 147,, 157,, 147,, 154,, 150,, 159,, 147,, 154,, 147,, 162,, 147,, 154,, 150,, 123],\n          f: [5, 13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 67] },\n        { n: [159,, 147,, 154,, 147,, 157,, 147,, 154,, 150,, 159,, 147,, 154,, 147,, 162,, 147,, 157,, 162,, 126],\n          f: [] },\n        { n: [159,, 147,, 154,, 147,, 157,, 147,, 154,, 150,, 159,, 147,, 154,, 147,, 162,, 147,, 154,, 150,, 123],\n          f: [5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 3] },\n        { n: [159,, 162,, 164,,,, 159,, 162, 164,,, 162,, 159,, 162,, 164,,,, 159,, 162, 164,,, 162],\n          f: [13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 25] },\n        { n: [157,, 162,, 164,,,, 157,, 162, 164,,, 162,, 157,, 162,, 164,,,, 157,, 162, 164,,, 162],\n          f: [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 67] }\n      ]\n    },\n    { // Instrument 6\n      i: [\n        3, // OSC1_WAVEFORM\n        146, // OSC1_VOL\n        140, // OSC1_SEMI\n        0, // OSC1_XENV\n        1, // OSC2_WAVEFORM\n        224, // OSC2_VOL\n        128, // OSC2_SEMI\n        3, // OSC2_DETUNE\n        0, // OSC2_XENV\n        0, // NOISE_VOL\n        92, // ENV_ATTACK\n        0, // ENV_SUSTAIN\n        95, // ENV_RELEASE\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        3, // LFO_WAVEFORM\n        179, // LFO_AMT\n        5, // LFO_FREQ\n        1, // LFO_FX_FREQ\n        3, // FX_FILTER\n        37, // FX_FREQ\n        135, // FX_RESONANCE\n        63, // FX_DIST\n        67, // FX_DRIVE\n        150, // FX_PAN_AMT\n        3, // FX_PAN_FREQ\n        157, // FX_DELAY_AMT\n        6 // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [,,,,,,,,, 1, 2, 3,, 1, 2, 1, 2, 3,, 4, 5,,,,, 3],\n      // Columns\n      c: [\n        { n: [123,,,,,,,,,,,,,,,, 130],\n          f: [11, 24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 92, 67] },\n        { n: [133,,,,,,,,,,,,,,, 138, 126,,,,,,,,,,,, 125],\n          f: [11,,,,,,,,,,,,,,,,,,,,,,,,,,,, 11,,,, 95,,,,,,,,,,,,,,,,,,,,,,,,,,,, 29] },\n        { n: [123],\n          f: [24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 24, 52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 67] },\n        { n: [123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 138,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 116],\n          f: [11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 95] },\n        { n: [133,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 126,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 118],\n          f: [] }\n      ]\n    },\n    { // Instrument 7\n      i: [\n        0, // OSC1_WAVEFORM\n        255, // OSC1_VOL\n        106, // OSC1_SEMI\n        1, // OSC1_XENV\n        0, // OSC2_WAVEFORM\n        255, // OSC2_VOL\n        106, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        1, // OSC2_XENV\n        0, // NOISE_VOL\n        5, // ENV_ATTACK\n        7, // ENV_SUSTAIN\n        164, // ENV_RELEASE\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        0, // LFO_AMT\n        0, // LFO_FREQ\n        0, // LFO_FX_FREQ\n        2, // FX_FILTER\n        255, // FX_FREQ\n        0, // FX_RESONANCE\n        2, // FX_DIST\n        16, // FX_DRIVE\n        83, // FX_PAN_AMT\n        5, // FX_PAN_FREQ\n        53, // FX_DELAY_AMT\n        1 // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [,,,,,,, 1,,,,,,,,,, 1,,,,,,,, 1],\n      // Columns\n      c: [\n        { n: [147],\n          f: [] }\n      ]\n    }\n  ],\n  rowLen: 5513, // In sample lengths\n  patternLen: 32, // Rows per pattern\n  endPattern: 26, // End pattern\n  numChannels: 8 // Number of channels\n}\n","// This music has been exported by SoundBox. You can use it with\n// http://sb.bitsnbites.eu/player-small.js in your own product.\n\n// See http://sb.bitsnbites.eu/demo.html for an example of how to\n// use it in a demo.\n\n// Song data\nexport default {\n  songData: [\n    { // Instrument 0\n      i: [\n        0, // OSC1_WAVEFORM\n        255, // OSC1_VOL\n        152, // OSC1_SEMI\n        0, // OSC1_XENV\n        0, // OSC2_WAVEFORM\n        255, // OSC2_VOL\n        152, // OSC2_SEMI\n        12, // OSC2_DETUNE\n        0, // OSC2_XENV\n        0, // NOISE_VOL\n        2, // ENV_ATTACK\n        0, // ENV_SUSTAIN\n        60, // ENV_RELEASE\n        193, // ARP_CHORD\n        3, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        0, // LFO_AMT\n        0, // LFO_FREQ\n        0, // LFO_FX_FREQ\n        2, // FX_FILTER\n        255, // FX_FREQ\n        0, // FX_RESONANCE\n        0, // FX_DIST\n        32, // FX_DRIVE\n        47, // FX_PAN_AMT\n        3, // FX_PAN_FREQ\n        0, // FX_DELAY_AMT\n        0 // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [1],\n      // Columns\n      c: [\n        { n: [123],\n          f: [] }\n      ]\n    }\n  ],\n  rowLen: 5513, // In sample lengths\n  patternLen: 1, // Rows per pattern\n  endPattern: 0, // End pattern\n  numChannels: 1 // Number of channels\n}\n","// This music has been exported by SoundBox. You can use it with\n// http://sb.bitsnbites.eu/player-small.js in your own product.\n\n// See http://sb.bitsnbites.eu/demo.html for an example of how to\n// use it in a demo.\n\n// Song data\nexport default {\n  songData: [\n    { // Instrument 0\n      i: [\n        0, // OSC1_WAVEFORM\n        255, // OSC1_VOL\n        152, // OSC1_SEMI\n        0, // OSC1_XENV\n        0, // OSC2_WAVEFORM\n        255, // OSC2_VOL\n        152, // OSC2_SEMI\n        12, // OSC2_DETUNE\n        0, // OSC2_XENV\n        0, // NOISE_VOL\n        2, // ENV_ATTACK\n        0, // ENV_SUSTAIN\n        60, // ENV_RELEASE\n        193, // ARP_CHORD\n        3, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        0, // LFO_AMT\n        0, // LFO_FREQ\n        0, // LFO_FX_FREQ\n        2, // FX_FILTER\n        255, // FX_FREQ\n        0, // FX_RESONANCE\n        0, // FX_DIST\n        32, // FX_DRIVE\n        47, // FX_PAN_AMT\n        3, // FX_PAN_FREQ\n        123, // FX_DELAY_AMT\n        5 // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [1],\n      // Columns\n      c: [\n        { n: [146],\n          f: [] }\n      ]\n    }\n  ],\n  rowLen: 5513, // In sample lengths\n  patternLen: 1, // Rows per pattern\n  endPattern: 0, // End pattern\n  numChannels: 1 // Number of channels\n}\n","export default class GenericKeyHandlerInput {\n  constructor (onUpdate) {\n    this._keys = new Set()\n    this.onUpdate = onUpdate || (() => {})\n  }\n\n  onKeyUp (noPreventDefault) {\n    return e => {\n      if (!noPreventDefault) {\n        e.preventDefault()\n      }\n      this._keys.delete(e.key)\n    }\n  }\n\n  onKeyDown (noPreventDefault) {\n    return e => {\n      if (!noPreventDefault) {\n        e.preventDefault()\n      }\n      this._keys.add(e.key)\n    }\n  }\n\n  // This function must return the type name of the camera, it could be used for serializing your scene\n  getTypeName () {\n    return 'GenericKeyHandlerInput'\n  }\n\n  // This function must return the simple name that will be injected in the input manager as short hand\n  // for example \"mouse\" will turn into camera.inputs.attached.mouse\n  getSimpleName () {\n    return 'genericKey'\n  }\n\n  // This function must activate your input event.  Even if your input does not need a DOM element\n  //  element and noPreventDefault must be present and used as parameter names.\n  //  Return void.\n  attachControl (element, noPreventDefault) {\n    this._onKeyDown = this.onKeyDown(noPreventDefault)\n    this._onKeyUp = this.onKeyUp(noPreventDefault)\n    element.addEventListener('keydown', this._onKeyDown, false)\n    element.addEventListener('keyup', this._onKeyUp, false)\n  }\n\n  // Detach control must deactivate your input and release all pointers, closures or event listeners\n  // element must be present as a parameter name.\n  //  Return void.\n  detachControl (element) {\n    element.removeEventListener('keydown', this._onKeyDown)\n    element.removeEventListener('keyup', this._onKeyUp)\n    this._keys = new Set()\n    delete this._onKeyDown\n    delete this._onKeyUp\n  }\n\n  // This optional function will get called for each rendered frame, if you want to synchronize your input to rendering,\n  // no need to use requestAnimationFrame. It's a good place for applying calculations if you have to.\n  //  Return void.\n  checkInputs () {\n    this.onUpdate(this._keys)\n  }\n}\n","import {\n  StandardMaterial,\n  Texture,\n  Vector3,\n  MeshBuilder\n} from 'babylonjs'\n\nconst { CreateSphere } = MeshBuilder\n\nexport default (scene, { x = 0, y = 0, z = 0, diameter = 4, ...options }) => {\n  const playerFire = new CreateSphere('playerFire', { diameter, ...options }, scene)\n  playerFire.position = new Vector3(x, y, z)\n  playerFire.material = new StandardMaterial('fire', scene)\n  playerFire.material.ambientTexture = new Texture(require('../fire.jpg'), scene)\n  return playerFire\n}\n","import {\n  StandardMaterial,\n  Texture,\n  Vector3,\n  MeshBuilder\n} from 'babylonjs'\n\nconst { CreateSphere } = MeshBuilder\n\nexport default (scene, { x = 0, y = 0, z = 0, diameter = 4 }) => {\n  const playerFire = new CreateSphere('playerWater', { diameter }, scene)\n  playerFire.position = new Vector3(x, y, z)\n  playerFire.material = new StandardMaterial('water', scene)\n  playerFire.material.ambientTexture = new Texture(require('../water.jpg'), scene)\n  return playerFire\n}\n","import {\n  StandardMaterial,\n  Texture,\n  Vector3,\n  MeshBuilder\n} from 'babylonjs'\n\nconst { CreateSphere } = MeshBuilder\n\nexport default (scene, { x = 0, y = 0, z = 0, diameter = 4 }) => {\n  const playerFire = new CreateSphere('playerEarth', { diameter }, scene)\n  playerFire.position = new Vector3(x, y, z)\n  playerFire.material = new StandardMaterial('earth', scene)\n  playerFire.material.ambientTexture = new Texture(require('../earth.png'), scene)\n  return playerFire\n}\n","// This music has been exported by SoundBox. You can use it with\n// http://sb.bitsnbites.eu/player-small.js in your own product.\n\n// See http://sb.bitsnbites.eu/demo.html for an example of how to\n// use it in a demo.\n\n// Song data\nexport default {\n  songData: [\n    { // Instrument 0\n      i: [\n        0, // OSC1_WAVEFORM\n        214, // OSC1_VOL\n        104, // OSC1_SEMI\n        1, // OSC1_XENV\n        0, // OSC2_WAVEFORM\n        204, // OSC2_VOL\n        104, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        1, // OSC2_XENV\n        229, // NOISE_VOL\n        4, // ENV_ATTACK\n        5, // ENV_SUSTAIN\n        35, // ENV_RELEASE\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        231, // LFO_AMT\n        6, // LFO_FREQ\n        1, // LFO_FX_FREQ\n        1, // FX_FILTER\n        255, // FX_FREQ\n        15, // FX_RESONANCE\n        0, // FX_DIST\n        32, // FX_DRIVE\n        0, // FX_PAN_AMT\n        4, // FX_PAN_FREQ\n        0, // FX_DELAY_AMT\n        0 // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [1],\n      // Columns\n      c: [\n        { n: [135],\n          f: [] }\n      ]\n    }\n  ],\n  rowLen: 5513, // In sample lengths\n  patternLen: 1, // Rows per pattern\n  endPattern: 0, // End pattern\n  numChannels: 1 // Number of channels\n}\n","import {\n  Scene,\n  FollowCamera,\n  Vector3,\n  DirectionalLight,\n  PhysicsImpostor,\n  MeshBuilder,\n  Color3,\n  ShadowGenerator\n} from 'babylonjs'\n\nimport song from '../assets/music/rechord'\nimport playerFire from '../assets/players/playerFire'\nimport playerWater from '../assets/players/playerWater'\nimport playerEarth from '../assets/players/playerEarth'\nimport shortSwoosh from '../assets/sounds/shortSwoosh'\nimport { MusicPlayer } from '../music'\n\nconst players = { playerFire, playerWater, playerEarth }\nconst { SphereImpostor, BoxImpostor } = PhysicsImpostor\nconst { CreateGround } = MeshBuilder\n\nexport default (engine, canvas, music, extra) => {\n  const scene = new Scene(engine)\n  scene.clearColor = Color3.Black()\n  const shortSwooshSound = new MusicPlayer(shortSwoosh)\n\n  const camera = new FollowCamera('FollowCam', Vector3.Zero(), scene)\n  camera.checkCollisions = true\n  camera.applyGravity = true\n  camera.radius = 5\n  camera.attachControl(canvas, true)\n\n  var light = new DirectionalLight('dir01', new Vector3(-1, -2, -1), scene)\n  light.position = new Vector3(20, 40, 20)\n  light.intensity = 0.5\n  const shadowGenerator = new ShadowGenerator(1024, light)\n  shadowGenerator.useExponentialShadowMap = true\n\n  const player = players[`player${extra.player}`](scene, { diameter: 1 })\n  shadowGenerator.getShadowMap().renderList.push(player)\n  player.position.y = 2\n  camera.lockedTarget = player\n  camera.position = new Vector3(player.y, 0, -10)\n  shadowGenerator.addShadowCaster(player)\n\n  const ground = CreateGround('ground1', { width: 16, height: 16, depth: 16, subdivs: 16 }, scene)\n  ground.receiveShadows = true\n\n  scene.enablePhysics()\n\n  player.physicsImpostor = new PhysicsImpostor(player, SphereImpostor, { mass: 1, restitution: 0.9 }, scene)\n  ground.physicsImpostor = new PhysicsImpostor(ground, BoxImpostor, { mass: 0, restitution: 0.9 }, scene)\n\n  player.physicsImpostor.registerOnPhysicsCollide(ground.physicsImpostor, (main, collided) => {\n    shortSwooshSound.stop()\n    shortSwooshSound.play()\n  })\n\n  const handleKeys = keys => {\n    const v = Vector3.Zero()\n    if (keys.has('ArrowLeft')) {\n      v.x = 1\n    } else if (keys.has('ArrowRight')) {\n      v.x = -1\n    }\n    if (keys.has('ArrowUp')) {\n      v.z = -1\n    } else if (keys.has('ArrowDown')) {\n      v.z = 1\n    }\n    keys.delete('ArrowUp')\n    keys.delete('ArrowDown')\n    keys.delete('ArrowLeft')\n    keys.delete('ArrowRight')\n    player.physicsImpostor.setLinearVelocity(v)\n  }\n\n  const keys = new Set()\n  canvas.addEventListener('keydown', e => {\n    keys.add(e.key)\n    handleKeys(keys)\n  })\n  canvas.addEventListener('keyup', e => {\n    keys.delete(e.key)\n    handleKeys(keys)\n  })\n\n  return scene\n}\n","import {\n  FreeCamera,\n  Scene,\n  Vector3,\n  Color3,\n  HemisphericLight,\n  PointLight,\n  GUI\n} from 'babylonjs'\nimport 'babylonjs-gui'\n\nimport game from '../game'\nimport song from '../assets/music/sway'\nimport menuPlunk from '../assets/sounds/menuPlunk'\nimport menuGo from '../assets/sounds/menuGo'\nimport GenericKeyHandlerInput from '../GenericKeyHandlerInput'\nimport { MusicPlayer } from '../music'\nimport mapPlay from './mapPlay'\nimport playerFire from '../assets/players/playerFire'\nimport playerWater from '../assets/players/playerWater'\nimport playerEarth from '../assets/players/playerEarth'\n\nconst { AdvancedDynamicTexture, Control: { VERTICAL_ALIGNMENT_BOTTOM, VERTICAL_ALIGNMENT_TOP }, TextBlock } = GUI\n\nexport default (engine, canvas, music) => {\n  const scene = new Scene(engine)\n  scene.clearColor = Color3.Black()\n  music.load(song, true, true)\n\n  const menuPlunkSound = new MusicPlayer(menuPlunk)\n  const menuGoSound = new MusicPlayer(menuGo)\n\n  const gui = AdvancedDynamicTexture.CreateFullscreenUI('UI')\n\n  const text1 = new GUI.TextBlock()\n  text1.text = '\\n\\n\\n\\n\\n\\nChoose your avatar'\n  text1.color = 'white'\n  text1.fontSize = 40\n  text1.textVerticalAlignment = VERTICAL_ALIGNMENT_TOP\n  gui.addControl(text1)\n\n  const text2 = new TextBlock()\n  text2.color = 'white'\n  text2.fontSize = 200\n  text2.textVerticalAlignment = VERTICAL_ALIGNMENT_BOTTOM\n  gui.addControl(text2)\n\n  const stuff = {}\n  stuff.light1 = new HemisphericLight('light1', new Vector3(1, 1, 0), scene)\n  stuff.light2 = new PointLight('light2', new Vector3(0, 1, -1), scene)\n\n  stuff.playerFire = playerFire(scene, {})\n  stuff.playerWater = playerWater(scene, { x: 7 })\n  stuff.playerEarth = playerEarth(scene, { x: 14 })\n\n  const camera = new FreeCamera('camera', Vector3.Zero(), scene)\n  camera.inputs.clear()\n\n  const players = ['Fire', 'Water', 'Earth']\n  let currentPlayer = 0\n\n  camera.inputs.add(new GenericKeyHandlerInput(keys => {\n    if (keys.has('ArrowLeft')) {\n      menuPlunkSound.play()\n      keys.delete('ArrowLeft')\n      currentPlayer = ((currentPlayer + players.length) - 1) % players.length\n    }\n\n    if (keys.has('ArrowRight')) {\n      menuPlunkSound.play()\n      keys.delete('ArrowRight')\n      currentPlayer = (currentPlayer + 1) % players.length\n    }\n\n    if (keys.has('Enter')) {\n      menuGoSound.play()\n      keys.delete('Enter')\n      game.load(mapPlay, { player: players[ currentPlayer ] })\n    }\n\n    const player = scene.getMeshByName(`player${players[ currentPlayer ]}`)\n    camera.lockedTarget = player\n    camera.position = new Vector3(player.y, 0, -10)\n\n    text2.text = `${players[ currentPlayer ]}\\n`\n  }))\n  camera.attachControl(canvas, true)\n\n  return scene\n}\n","import './styles.css'\nimport characterSelect from './scenes/characterSelect'\n\nimport game from './game'\n\ngame.load(characterSelect)\n"],"sourceRoot":""}